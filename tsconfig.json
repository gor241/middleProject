{
    "compilerOptions": {
        "outDir": "./dist/",
        // Подсвечивает все места где не указан тип
        // Однако это не означает, что теперь вовсе нельзя использовать any.
        // Это означает лишь, что в подобных ситуация разработчик должен явно писать any,
        "noImplicitAny": true,
        "module": "ESNext",
        // В какую спецификацию компилируем: для поддержки большинства браузеров
        "target": "es2017",
        "lib": ["dom", "es2017"],
        "jsx": "react-jsx",
        // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
        "allowJs": true,
        "moduleResolution": "node",
        // esModuleInterop позволяет работать с пакетами, которые используют
        // common js как с обычными пакета с помощью import (require() module.export) = common js
        // import Moment from 'moment';
        // без флага esModuleInterop результат undefined
        // console.log(Moment);
        // c флагом результат [object Object]
        // console.log(Moment);
        "baseUrl": ".",
        "paths": {
            "*": ["./src/*"]
        },
        // Все абсолютные импорты будут идти из папки src
        "esModuleInterop": true,
        // Если какая-либо библиотека не имеет default import,
        // лоадеры вроде ts-loader или babel-loader автоматически создают их
        // вместо такого импорта
        // import * as React from 'react';
        // можно писать такой
        // import React from 'react';
        "allowSyntheticDefaultImports": true,
        "types": ["jest", "@testing-library/jest-dom", "node"]
    },
    "ts-node": {
        "compilerOptions": {
            "module": "CommonJS"
        }
        // Ддя того, что бы работали svg импорты
        // "include": ["src/components", "src/custom.d.ts"]
    },
    // Это нужно для того, что бы использовать import(вместо require) в webpack.config
    "include": [
        "./config/jest/setupTests.ts",
        "./src/**/*.ts",
        "./src/**/*.tsx"
    ]
    // Настройка для jest тестов, что бы ts подтягивал jest методы для DOM
}
